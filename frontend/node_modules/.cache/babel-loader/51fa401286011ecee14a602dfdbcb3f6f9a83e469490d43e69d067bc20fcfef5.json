{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\mern-auth-firebase\\\\frontend\\\\src\\\\components\\\\Leaderboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\nconst socket = io(API_URL, {\n  transports: [\"websocket\"]\n});\nconst Leaderboard = () => {\n  _s();\n  const [mode, setMode] = useState(\"classic\");\n  const [leaderboard, setLeaderboard] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchLeaderboard = () => {\n      fetch(`${API_URL}/leaderboard/${mode}`).then(res => res.json()).then(data => setLeaderboard(data.leaderboard.filter(player => {\n        var _player$stats;\n        return (_player$stats = player.stats) === null || _player$stats === void 0 ? void 0 : _player$stats[mode];\n      }).map((player, index) => ({\n        ...player,\n        rank: index + 1\n      })))).catch(error => console.error(\"Error fetching leaderboard:\", error));\n    };\n    fetchLeaderboard();\n    const handleUpdate = data => {\n      setLeaderboard(data.filter(player => {\n        var _player$stats2;\n        return (_player$stats2 = player.stats) === null || _player$stats2 === void 0 ? void 0 : _player$stats2[mode];\n      }).map((player, index) => ({\n        ...player,\n        rank: index + 1\n      })));\n    };\n    socket.on(\"leaderboardUpdate\", handleUpdate);\n    socket.on(\"connect_error\", err => console.error(\"Socket error:\", err));\n    return () => {\n      socket.off(\"leaderboardUpdate\", handleUpdate);\n    };\n  }, [mode]);\n  const getMedalIcon = rank => {\n    if (rank === 1) return \"🥇\";\n    if (rank === 2) return \"🥈\";\n    if (rank === 3) return \"🥉\";\n    return rank;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/game\"),\n        children: \"\\uD83D\\uDD19 Return to Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFC6 Leaderboard \\uD83C\\uDFC6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMode(\"classic\"),\n        className: mode === \"classic\" ? \"active\" : \"\",\n        children: \"Single Player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMode(\"duel\"),\n        className: mode === \"duel\" ? \"active\" : \"\",\n        children: \"Multiplayer Duel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: leaderboard.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"4\",\n            className: \"text-center\",\n            children: \"No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : leaderboard.map(player => {\n          var _player$stats$mode, _player$stats$mode$sc, _player$stats$mode2, _player$stats$mode$ti, _player$stats$mode3;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: getMedalIcon(player.rank)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: player.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ((_player$stats$mode = player.stats[mode]) === null || _player$stats$mode === void 0 ? void 0 : _player$stats$mode.score) === 9999 ? \"-\" : (_player$stats$mode$sc = (_player$stats$mode2 = player.stats[mode]) === null || _player$stats$mode2 === void 0 ? void 0 : _player$stats$mode2.score) !== null && _player$stats$mode$sc !== void 0 ? _player$stats$mode$sc : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [(_player$stats$mode$ti = (_player$stats$mode3 = player.stats[mode]) === null || _player$stats$mode3 === void 0 ? void 0 : _player$stats$mode3.time) !== null && _player$stats$mode$ti !== void 0 ? _player$stats$mode$ti : \"-\", \" sec\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, player.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"/J1+c0mQ5JyajFz615ROS8NyOn8=\", false, function () {\n  return [useNavigate];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","io","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","socket","transports","Leaderboard","_s","mode","setMode","leaderboard","setLeaderboard","navigate","fetchLeaderboard","fetch","then","res","json","data","filter","player","_player$stats","stats","map","index","rank","catch","error","console","handleUpdate","_player$stats2","on","err","off","getMedalIcon","className","children","style","marginBottom","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","colSpan","_player$stats$mode","_player$stats$mode$sc","_player$stats$mode2","_player$stats$mode$ti","_player$stats$mode3","username","score","time","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/mern-auth-firebase/frontend/src/components/Leaderboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\nconst socket = io(API_URL, { transports: [\"websocket\"] });\r\n\r\nconst Leaderboard = () => {\r\n  const [mode, setMode] = useState(\"classic\");\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboard = () => {\r\n      fetch(`${API_URL}/leaderboard/${mode}`)\r\n        .then((res) => res.json())\r\n        .then((data) =>\r\n          setLeaderboard(\r\n            data.leaderboard\r\n              .filter((player) => player.stats?.[mode])\r\n              .map((player, index) => ({ ...player, rank: index + 1 }))\r\n          )\r\n        )\r\n        .catch((error) => console.error(\"Error fetching leaderboard:\", error));\r\n    };\r\n\r\n    fetchLeaderboard();\r\n\r\n    const handleUpdate = (data) => {\r\n      setLeaderboard(\r\n        data\r\n          .filter((player) => player.stats?.[mode])\r\n          .map((player, index) => ({\r\n            ...player,\r\n            rank: index + 1,\r\n          }))\r\n      );\r\n    };\r\n\r\n    socket.on(\"leaderboardUpdate\", handleUpdate);\r\n    socket.on(\"connect_error\", (err) => console.error(\"Socket error:\", err));\r\n\r\n    return () => {\r\n      socket.off(\"leaderboardUpdate\", handleUpdate);\r\n    };\r\n  }, [mode]);\r\n\r\n  const getMedalIcon = (rank) => {\r\n    if (rank === 1) return \"🥇\";\r\n    if (rank === 2) return \"🥈\";\r\n    if (rank === 3) return \"🥉\";\r\n    return rank;\r\n  };\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      {/* Return Button */}\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <button onClick={() => navigate(\"/game\")}>🔙 Return to Game</button>\r\n      </div>\r\n\r\n      <h2>🏆 Leaderboard 🏆</h2>\r\n\r\n      {/* Mode Toggle */}\r\n      <div className=\"mode-toggle\">\r\n        <button\r\n          onClick={() => setMode(\"classic\")}\r\n          className={mode === \"classic\" ? \"active\" : \"\"}\r\n        >\r\n          Single Player\r\n        </button>\r\n        <button\r\n          onClick={() => setMode(\"duel\")}\r\n          className={mode === \"duel\" ? \"active\" : \"\"}\r\n        >\r\n          Multiplayer Duel\r\n        </button>\r\n      </div>\r\n\r\n      {/* Leaderboard Table */}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Rank</th>\r\n            <th>Username</th>\r\n            <th>Score</th>\r\n            <th>Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {leaderboard.length === 0 ? (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">\r\n                No data available\r\n              </td>\r\n            </tr>\r\n          ) : (\r\n            leaderboard.map((player) => (\r\n              <tr key={player.username}>\r\n                <td>{getMedalIcon(player.rank)}</td>\r\n                <td>{player.username}</td>\r\n                <td>\r\n                  {player.stats[mode]?.score === 9999\r\n                    ? \"-\"\r\n                    : player.stats[mode]?.score ?? 0}\r\n                </td>\r\n                <td>{player.stats[mode]?.time ?? \"-\"} sec</td>\r\n              </tr>\r\n            ))\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}